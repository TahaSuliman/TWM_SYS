@model Curly_TWM.Domain.Entities.Initiatives

@{
    ViewBag.Title = "EditInitiatives";
    Layout = "~/Views/Initiative_Officer/_LayoutInitiativeOfficer.cshtml";
}


<style>
    textarea {
        display: block;
        width: 100%;
        padding: .375rem .75rem;
        font-weight: 400;
        line-height: 1.5;
        color: #495057;
        border: 1px solid #ced4da;
        border-radius: .25rem;
        transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
        color: #5e6278;
        transition: color .2s ease,background-color .2s ease;
    }
</style>

<div class="content" style="direction:rtl;text-align:right">


    <div class="grid grid-cols-12 gap-6 mt-5">
        <div class="intro-y col-span-12 lg:col-span-12">
            <!-- BEGIN: Input -->
            <div class="intro-y box">
                <div class="flex flex-col sm:flex-row items-center p-5 border-b border-slate-200/60 dark:border-darkmode-400">
                    <h2 class="font-medium text-base">
                        @ViewBag.ActionName
                    </h2>
                    <div class="form-check form-switch w-full sm:w-auto sm:ml-auto mt-3 sm:mt-0">

                    </div>
                </div>
                <div id="input" class="p-5">
                    <div class="preview">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(model => model.Id)

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <span style="display:none">
                                @Html.TextBoxFor(model => model.InitiativeStat, new { @Value = "" })

                                @Html.TextBoxFor(model => model.Initiative_Entry, new { @Value = Model.Initiative_Entry.ToString("yyyy-MM-dd") })
                                @Html.TextBoxFor(model => model.empid, new { @class = "cou", @Value = ViewBag.empid })
                            </span>


                            <div>
                                @Html.LabelFor(model => model.InitiativeName, htmlAttributes: new { @class = "form-label" })
                                @Html.EditorFor(model => model.InitiativeName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.InitiativeName, "", new { @class = "text-danger" })
                            </div>

                            <div>
                                @Html.LabelFor(model => model.InitiativeDeatails, htmlAttributes: new { @class = "form-label" })
                                @Html.TextAreaFor(model => model.InitiativeDeatails, 7, 100, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.InitiativeDeatails, "", new { @class = "text-danger" })
                            </div>

                            <div class="grid grid-cols-12 gap-6 mt-5">
                                <div class="intro-y col-span-12 md:col-span-6 lg:col-span-6 xl:col-span-6">
                                    @Html.LabelFor(model => model.Initiative_Sdt, htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.Initiative_Sdt, new { htmlAttributes = new { @class = "form-control", type = "date", @Value = Model.Initiative_Sdt.ToString("yyyy-MM-dd") } })
                                    @Html.ValidationMessageFor(model => model.Initiative_Sdt, "", new { @class = "" })
                                </div>
                                <div class="intro-y col-span-12 md:col-span-6 lg:col-span-6 xl:col-span-6">
                                    @Html.LabelFor(model => model.Initiative_Edt, htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.Initiative_Edt, new { htmlAttributes = new { @class = "form-control", type = "date", @Value = Model.Initiative_Edt.ToString("yyyy-MM-dd") } })
                                    @Html.ValidationMessageFor(model => model.Initiative_Edt, "", new { @class = "" })
                                </div>
                            </div>




                            <div>
                                @Html.LabelFor(model => model.Targetid, htmlAttributes: new { @class = "form-label" })
                                @Html.DropDownList("Targetid", null, " ... اختر الهدف الاستراتيجي ...", htmlAttributes: new { @class = "form-select form-select-solid select2-hidden-accessible", @data_control = "select2", @tabindex = "-1", @aria_hidden = "true" })
                                @Html.ValidationMessageFor(model => model.Targetid, "", new { @class = "text-danger" })
                            </div>





                            <div>
                                @Html.LabelFor(model => model.remarks, htmlAttributes: new { @class = "form-label" })
                                @Html.TextAreaFor(model => model.remarks, 3, 100, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.remarks, "", new { @class = "text-danger" })
                            </div>


                            <div class="mt-5">
                                <input type="submit" value="حفظ التحديث" class="btn btn-primary" />
                                <a href="@Url.Action("Initiatives", "Initiative_Officer")" class="btn btn-warning text-white">الرئيسية</a>
                            </div>



                        }


                    </div>

                </div>
            </div>
            <!-- END: Input -->
            <!-- BEGIN: Input Sizing -->

        </div>

    </div>



</div>










<script>
    var date = new Date();

    var day = date.getDate();
    var month = date.getMonth() + 1;
    var year = date.getFullYear();

    if (month < 10) month = "0" + month;
    if (day < 10) day = "0" + day;

    var today = year + "-" + month + "-" + day;

    //document.getElementById('theDate').value = today;
    ////document.getElementById('theDate2').value = today;
    //document.getElementById('theDate3').value = today;
</script>



